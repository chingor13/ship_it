h1 #{@project.name} : #{@environment.name}

dl.dl-horizontal
  dt Branch:
  dd = @deployment.branch.name

  dt Revision:
  dd = @deployment.revision

  dt Deployed at:
  dd = @deployment.created_at.to_s(:short)

  dt Deployed by:
  dd = @deployment.created_by.andand.name || "unknown"

= render partial: "details", locals: {deployment: @deployment}

h3 Commits
table.table.table-striped
  thead
    tr
      th Revision
      th Message
  tbody
    - @deployment.commits.each do |commit|
      tr
        td = commit.sha[0...8]
        td = commit.message

h3 Log
pre#log class="#{@deployment.completed? ? "" : "uncompleted"}"

- unless @deployment.completed?
  javascript:
    $(function(){
      function pollLog(offset) {
        $.ajax("#{polymorphic_path([:log, @project, @environment, @deployment])}", {
          data: {
            offset: offset,
            time: (new Date()).getTime()
          },
          success: function(data, status, xhr) {
            if(data != "") {
              $("#log").append(data).scrollTop($("#log").prop("scrollHeight"));
            }
            if(xhr.getResponseHeader('X-Log-Complete')) {
              $("#log").removeClass('uncompleted');
            } else {
              setTimeout(function() { pollLog(offset + parseInt(xhr.getResponseHeader('X-Log-Length'))) }, 5000);
            }
          }
        });
      }

      function pollStatus() {
        $.ajax("#{polymorphic_path([@project, @environment, @deployment], format: :js)}");
      }

      pollLog(#{@deployment.log.andand.length || "0"});
      pollStatus();
      
      $("body").bind("deployment:refresh", pollStatus);
    });

css:
  pre {
    max-height: 500px;
    overflow-y: auto;
    overflow-x: hidden;
    font-size: 10px;
  }
